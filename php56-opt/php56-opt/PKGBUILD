# Contributor: mickael9 <mickael9 at gmail.com>
# Contributor: Pierre Schmitz <pierre@archlinux.de>

_installdir=opt/php56

_edit_installdir() {
    sed "s:@~INSTALL_DIR~@:${_installdir}:g" -i "$1"
}

pkgbase=php56-opt
_pkgbase=${pkgbase%56-opt}
pkgname=("${pkgbase}"
         "${pkgbase}-cgi"
         "${pkgbase}-apache"
         "${pkgbase}-fpm"
         "${pkgbase}-embed"
         "${pkgbase}-phpdbg"
         "${pkgbase}-pear"
         "${pkgbase}-enchant"
         "${pkgbase}-gd"
         "${pkgbase}-imap"
         "${pkgbase}-intl"
         "${pkgbase}-ldap"
         "${pkgbase}-mcrypt"
         "${pkgbase}-mssql"
         "${pkgbase}-odbc"
         "${pkgbase}-pgsql"
         "${pkgbase}-pspell"
         "${pkgbase}-snmp"
         "${pkgbase}-sqlite"
         "${pkgbase}-tidy"
         "${pkgbase}-xsl")
pkgver=5.6.40
pkgrel=4
arch=('i686' 'x86_64')
license=('PHP')
url='http://php.net'
makedepends=('apache' 'c-client' 'postgresql-libs' 'libldap' 'postfix'
             'sqlite' 'unixodbc' 'net-snmp' 'libzip' 'enchant' 'file' 'freetds'
             'libmcrypt' 'tidyhtml' 'aspell' 'libltdl' 'gd' 'icu'
             'curl' 'libxslt' 'openssl' 'db' 'gmp' 'systemd')

#checkdepends=('procps-ng')
source=("http://php.net/distributions/${_pkgbase}-${pkgver}.tar.xz"
#        "http://php.net/distributions/${_pkgbase}-${pkgver}.tar.xz.asc"
        'php.ini.patch' 'apache.conf' 'php-fpm.conf.in.patch'
        'logrotate.d.php-fpm' 'php-fpm.service' 'php-fpm.tmpfiles'
        'php56-openssl11-4ca75ff1f3c341b83932f85310595f5c0a10f57e.patch'
        'php56-use-enchant-2-c5c8657995ea9932005a13be70bd48c5e8935d9b.patch'
        'php-freetype-2.9.1.patch')
sha256sums=('1369a51eee3995d7fbd1c5342e5cc917760e276d561595b6052b21ace2656d1c'
#           'SKIP'
            '7c8e614eb8499bd0ec2cc68c77bd25128b639b6b19155c104d09a0ad5b89d5f3'
            '8b5b15f1c348d8897d837ea9894157d9630dc542bbb0dbc7ad93c5dc0235d1d5'
            '55deacd90379db997c40b2c2e56010487f3ebf5d6caa9c36397452a507cd54df'
            'c86b93681ba39a358b74badb1d584adee56397651bfc4ddb2a6e72743caba8a4'
            '646a6ce1bf0646c2d35094fa79337760e6ded26cfe7b034bb19d1d8dc842d531'
            'f013d61795c2a9b33c38a78a15f5f9a5e39457884298f670cc81346e79312a2f'
            'c7ef58b2ff0ada21339142acf3d39cc5edce222c279023007c5c1091e706bc3a'
            '8d7e41a890f3284d1f3b3fc275f744ecd4856c4de003f192d9abd64f6b4345ab'
            'f9fe57f809ac13e0043d18b795ef777af3e8c710a83745b37b09db536f683d2a')
#validpgpkeys=('6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3'
#              '0BD78B5F97500D450838F95DFE857D9A90D90EC1'
#              'C2BF0BC433CFC8B3')

prepare() {
	cd ${srcdir}/${_pkgbase}-${pkgver}

	patch -p0 -i ${srcdir}/php.ini.patch
	patch -p0 -i ${srcdir}/php-fpm.conf.in.patch
	# Just because our Apache 2.4 is configured with a threaded MPM by default does not mean we want to build a ZTS PHP.
	# Let's supress this behaviour and build a SAPI that works fine with the prefork MPM.
	sed '/APACHE_THREADED_MPM=/d' -i sapi/apache2handler/config.m4 -i configure

	# Adds support for php 5.6
	patch -p1 -i ${srcdir}/php56-openssl11-4ca75ff1f3c341b83932f85310595f5c0a10f57e.patch

	# thanks to JÃ¶rg Schuck for providing this patch
	# https://gist.github.com/jschuck/5d237974e5856a221ccb347c9ccf8711
	patch -p0 -N -l -i "${srcdir}/php56-use-enchant-2-c5c8657995ea9932005a13be70bd48c5e8935d9b.patch"

	# fix compatibility with freetype >=2.9.1
	# kudos to Brian Evans <grknight@gentoo.org>
	# https://gitweb.gentoo.org/repo/gentoo.git/plain/dev-lang/php/files/php-freetype-2.9.1.patch
	patch -p1 -N -l -i "${srcdir}/php-freetype-2.9.1.patch"
}

build() {
	# http://site.icu-project.org/download/61#TOC-Migration-Issues
	CPPFLAGS+=' -DU_USING_ICU_NAMESPACE=1'

	local _phpconfig="--srcdir=../${_pkgbase}-${pkgver} \
		--config-cache \
		--prefix=/${_installdir} \
		--with-layout=GNU \
		--with-config-file-path=/${_installdir}/etc \
		--with-config-file-scan-dir=/${_installdir}/etc/conf.d \
		--disable-rpath \
		--without-pear \
		"

	local _phpextensions="--enable-bcmath=shared \
		--enable-calendar=shared \
		--enable-dba=shared \
		--enable-exif=shared \
		--enable-ftp=shared \
		--enable-gd-native-ttf \
		--enable-intl=shared \
		--enable-mbstring \
		--enable-opcache \
		--enable-phar=shared \
		--enable-posix=shared \
		--enable-shmop=shared \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-zip=shared \
		--with-bz2=shared \
		--with-curl=shared \
		--with-db4=/usr \
		--with-enchant=shared,/usr \
		--with-fpm-systemd \
		--with-freetype-dir=/usr \
		--with-xpm-dir=/usr \
		--with-gd=shared,/usr \
		--with-gdbm \
		--with-gettext=shared \
		--with-gmp=shared \
		--with-iconv=shared \
		--with-icu-dir=/usr \
		--with-imap-ssl \
		--with-imap=shared \
		--with-kerberos=/usr \
		--with-jpeg-dir=/usr \
		--with-vpx-dir=/usr \
		--with-ldap=shared \
		--with-ldap-sasl \
		--with-libzip \
		--with-mcrypt=shared \
		--with-mhash \
		--with-mssql=shared \
		--with-mysql-sock=/run/mysqld/mysqld.sock \
		--with-mysql=shared,mysqlnd \
		--with-mysqli=shared,mysqlnd \
		--with-openssl=shared \
		--with-pcre-regex=/usr \
		--with-pdo-mysql=shared,mysqlnd \
		--with-pdo-odbc=shared,unixODBC,/usr \
		--with-pdo-pgsql=shared \
		--with-pdo-sqlite=shared,/usr \
		--with-pgsql=shared \
		--with-png-dir=/usr \
		--with-pspell=shared \
		--with-snmp=shared \
		--with-sqlite3=shared,/usr \
		--with-tidy=shared \
		--with-unixODBC=shared,/usr \
		--with-xmlrpc=shared \
		--with-xsl=shared \
		--with-zlib \
		"

	EXTENSION_DIR=/${_installdir}/lib/modules
	export EXTENSION_DIR
	PEAR_INSTALLDIR=/${_installdir}/pear
	export PEAR_INSTALLDIR

	cd ${srcdir}/${_pkgbase}-${pkgver}

	# php
	mkdir ${srcdir}/build-php
	cd ${srcdir}/build-php
	ln -s ../${_pkgbase}-${pkgver}/configure
	./configure ${_phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		${_phpextensions}
	make

	# cgi and fcgi
	# reuse the previous run; this will save us a lot of time
	cp -a ${srcdir}/build-php ${srcdir}/build-cgi
	cd ${srcdir}/build-cgi
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-cgi \
		${_phpextensions}
	make

	# apache
	cp -a ${srcdir}/build-php ${srcdir}/build-apache
	cd ${srcdir}/build-apache
	./configure ${_phpconfig} \
		--disable-cli \
		--with-apxs2 \
		${_phpextensions}
	make

	# fpm
	cp -a ${srcdir}/build-php ${srcdir}/build-fpm
	cd ${srcdir}/build-fpm
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-fpm \
		--with-fpm-user=http \
		--with-fpm-group=http \
		${_phpextensions}
	make

	# embed
	cp -a ${srcdir}/build-php ${srcdir}/build-embed
	cd ${srcdir}/build-embed
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-embed=shared \
		${_phpextensions}
	make

	# phpdbg
	cp -a ${srcdir}/build-php ${srcdir}/build-phpdbg
	cd ${srcdir}/build-phpdbg
	./configure ${_phpconfig} \
		--disable-cli \
		--disable-cgi \
		--with-readline \
		--enable-phpdbg \
		${_phpextensions}
	make

	# pear
	cp -a ${srcdir}/build-php ${srcdir}/build-pear
	cd ${srcdir}/build-pear
	./configure ${_phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		--with-pear \
		${_phpextensions}
	make
}

#check() {
#	cd ${srcdir}/${_pkgbase}-${pkgver}
#
#	# tests on i686 fail
#	[[ $CARCH == 'i686' ]] && return
#	# a couple of tests fail in btrfs-backed chroots
#	[[ $(stat -f -c %T .) == btrfs ]] && return
#
#	export REPORT_EXIT_STATUS=1
#	export NO_INTERACTION=1
#	export SKIP_ONLINE_TESTS=1
#	export SKIP_SLOW_TESTS=1
#
#	${srcdir}/build-php/sapi/cli/php -n \
#		run-tests.php -n -P \
#		{tests,Zend,ext/{spl,standard},sapi/cli}
#}

package_php56-opt() {
	pkgdesc='An HTML-embedded scripting language'
	depends=('pcre' 'libxml2' 'curl' 'libzip')
	backup=("${_installdir}/etc/php.ini")

	cd ${srcdir}/build-php
	make -j1 INSTALL_ROOT=${pkgdir} install
	install -d -m755 ${pkgdir}/${_installdir}/share/pear
	# install php.ini
	install -D -m644 ${srcdir}/${_pkgbase}-${pkgver}/php.ini-production ${pkgdir}/${_installdir}/etc/php.ini
	_edit_installdir ${pkgdir}/${_installdir}/etc/php.ini
	install -d -m755 ${pkgdir}/${_installdir}/etc/conf.d/

	# remove static modules
	rm -f ${pkgdir}/${_installdir}/lib/modules/*.a
	# remove modules provided by sub packages
	rm -f ${pkgdir}/${_installdir}/lib/modules/{enchant,gd,imap,intl,ldap,mcrypt,mssql,odbc,pdo_odbc,pgsql,pdo_pgsql,pspell,snmp,sqlite3,pdo_sqlite,tidy,xsl}.so
	# remove empty directory
	rmdir ${pkgdir}/${_installdir}/include/php/include
	# fix broken link
	ln -sf phar.phar ${pkgdir}/${_installdir}/bin/phar
}

package_php56-opt-cgi() {
	pkgdesc='CGI and FCGI SAPI for PHP'
	depends=("${pkgbase}")

	install -D -m755 ${srcdir}/build-cgi/sapi/cgi/php-cgi ${pkgdir}/${_installdir}/bin/php-cgi
}

package_php56-opt-apache() {
	pkgdesc='Apache SAPI for PHP'
	depends=("${pkgbase}" 'apache')
	backup=("${_installdir}/etc/httpd/conf/extra/php5_module.conf")

	install -D -m755 ${srcdir}/build-apache/libs/libphp5.so ${pkgdir}/${_installdir}/lib/httpd/modules/libphp5.so
	install -D -m644 ${srcdir}/apache.conf ${pkgdir}/${_installdir}/etc/httpd/conf/extra/php5_module.conf
}

package_php56-opt-fpm() {
	pkgdesc='FastCGI Process Manager for PHP'
	depends=("${pkgbase}" 'systemd')
	backup=("${_installdir}/etc/php-fpm.conf")
	install='php-fpm.install'

	install -D -m755 ${srcdir}/build-fpm/sapi/fpm/php-fpm ${pkgdir}/${_installdir}/bin/php-fpm
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.conf ${pkgdir}/${_installdir}/etc/php-fpm.conf
	install -D -m644 ${srcdir}/logrotate.d.php-fpm ${pkgdir}/etc/logrotate.d/php56-opt-fpm
	_edit_installdir ${pkgdir}/etc/logrotate.d/php56-opt-fpm
	install -d -m755 ${pkgdir}/${_installdir}/etc/fpm.d
	install -D -m644 ${srcdir}/php-fpm.tmpfiles ${pkgdir}/usr/lib/tmpfiles.d/php56-opt-fpm.conf
	_edit_installdir ${pkgdir}/usr/lib/tmpfiles.d/php56-opt-fpm.conf
	install -D -m644 ${srcdir}/php-fpm.service ${pkgdir}/usr/lib/systemd/system/php56-opt-fpm.service
	_edit_installdir ${pkgdir}/usr/lib/systemd/system/php56-opt-fpm.service
}

package_php56-opt-embed() {
	pkgdesc='Embedded PHP SAPI library'
	depends=("${pkgbase}")

	install -D -m755 ${srcdir}/build-embed/libs/libphp5.so ${pkgdir}/${_installdir}/lib/libphp5.so
	install -D -m644 ${srcdir}/${_pkgbase}-${pkgver}/sapi/embed/php_embed.h ${pkgdir}/${_installdir}/include/php/sapi/embed/php_embed.h
}

package_php56-opt-phpdbg() {
	pkgdesc='Interactive PHP debugger'
	depends=("${pkgbase}")

	install -D -m755 ${srcdir}/build-phpdbg/sapi/phpdbg/phpdbg ${pkgdir}/${_installdir}/bin/phpdbg
}

package_php56-opt-pear() {
	pkgdesc='PHP Extension and Application Repository'
	depends=("${pkgbase}")
	backup=("${_installdir}/etc/pear.conf")

	cd ${srcdir}/build-pear
	make install-pear INSTALL_ROOT=${pkgdir}
	rm -rf ${pkgdir}/${_installdir}/share/pear/.{channels,depdb,depdblock,filemap,lock,registry}
	rm -rf ${pkgdir}/.{channels,depdb,depdblock,filemap,lock,registry}
}

package_php56-opt-enchant() {
	pkgdesc='enchant module for PHP'
	depends=("${pkgbase}" 'enchant')

	install -D -m755 ${srcdir}/build-php/modules/enchant.so ${pkgdir}/${_installdir}/lib/modules/enchant.so
}

package_php56-opt-gd() {
	pkgdesc='gd module for PHP'
	depends=("${pkgbase}" 'gd')

	install -D -m755 ${srcdir}/build-php/modules/gd.so ${pkgdir}/${_installdir}/lib/modules/gd.so
}

package_php56-opt-imap() {
	pkgdesc='imap module for PHP'
	depends=("${pkgbase}" 'c-client')

	install -D -m755 ${srcdir}/build-php/modules/imap.so ${pkgdir}/${_installdir}/lib/modules/imap.so
}

package_php56-opt-intl() {
	pkgdesc='intl module for PHP'
	depends=("${pkgbase}" 'icu')

	install -D -m755 ${srcdir}/build-php/modules/intl.so ${pkgdir}/${_installdir}/lib/modules/intl.so
}

package_php56-opt-ldap() {
	pkgdesc='ldap module for PHP'
	depends=("${pkgbase}" 'libldap')

	install -D -m755 ${srcdir}/build-php/modules/ldap.so ${pkgdir}/${_installdir}/lib/modules/ldap.so
}

package_php56-opt-mcrypt() {
	pkgdesc='mcrypt module for PHP'
	depends=("${pkgbase}" 'libmcrypt' 'libltdl')

	install -D -m755 ${srcdir}/build-php/modules/mcrypt.so ${pkgdir}/${_installdir}/lib/modules/mcrypt.so
}

package_php56-opt-mssql() {
	pkgdesc='mssql module for PHP'
	depends=("${pkgbase}" 'freetds')

	install -D -m755 ${srcdir}/build-php/modules/mssql.so ${pkgdir}/${_installdir}/lib/modules/mssql.so
}

package_php56-opt-odbc() {
	pkgdesc='ODBC modules for PHP'
	depends=("${pkgbase}" 'unixodbc')

	install -D -m755 ${srcdir}/build-php/modules/odbc.so ${pkgdir}/${_installdir}/lib/modules/odbc.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_odbc.so ${pkgdir}/${_installdir}/lib/modules/pdo_odbc.so
}

package_php56-opt-pgsql() {
	pkgdesc='PostgreSQL modules for PHP'
	depends=("${pkgbase}" 'postgresql-libs')

	install -D -m755 ${srcdir}/build-php/modules/pgsql.so ${pkgdir}/${_installdir}/lib/modules/pgsql.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_pgsql.so ${pkgdir}/${_installdir}/lib/modules/pdo_pgsql.so
}

package_php56-opt-pspell() {
	pkgdesc='pspell module for PHP'
	depends=("${pkgbase}" 'aspell')

	install -D -m755 ${srcdir}/build-php/modules/pspell.so ${pkgdir}/${_installdir}/lib/modules/pspell.so
}

package_php56-opt-snmp() {
	pkgdesc='snmp module for PHP'
	depends=("${pkgbase}" 'net-snmp')

	install -D -m755 ${srcdir}/build-php/modules/snmp.so ${pkgdir}/${_installdir}/lib/modules/snmp.so
}

package_php56-opt-sqlite() {
	pkgdesc='sqlite module for PHP'
	depends=("${pkgbase}" 'sqlite')

	install -D -m755 ${srcdir}/build-php/modules/sqlite3.so ${pkgdir}/${_installdir}/lib/modules/sqlite3.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_sqlite.so ${pkgdir}/${_installdir}/lib/modules/pdo_sqlite.so
}

package_php56-opt-tidy() {
	pkgdesc='tidy module for PHP'
	depends=("${pkgbase}" 'tidyhtml')

	install -D -m755 ${srcdir}/build-php/modules/tidy.so ${pkgdir}/${_installdir}/lib/modules/tidy.so
}

package_php56-opt-xsl() {
	pkgdesc='xsl module for PHP'
	depends=("${pkgbase}" 'libxslt')

	install -D -m755 ${srcdir}/build-php/modules/xsl.so ${pkgdir}/${_installdir}/lib/modules/xsl.so
}
